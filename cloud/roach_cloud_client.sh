cockroach sql --url "postgresql://michael:6d1yJKLM7zRGY3VrdVUy2g@free-tier14.aws-us-east-1.cockroachlabs.cloud:26257/defaultdb?sslmode=verify-full&options=--cluster%3Drock-ibis-182&sslrootcert=$HOME/.postgresql/root.crt"


Just a few more thoughts I'd like to bounce of you as I am learning the landscape here (please feel no pressure to answer synchronously, just putting my thoughts here for you to respond to at leisure or when we talk):
I just learned that roach cloud users are restricted to weak password auth with no better options? I would expect that there are upcoming changes for that in the works, like to allow a cloud user with root cluster privilege to issue client certificates? The current state seems very limiting.
I also just happened to notice that for cloud these password-authed users are created by default with FULL PRIVELEGE when they are created from the console (appears not be the case when created with create user;)
So in between when a new user is console-created and when it has its grants modified (which cannot be done from the console), it is capable of destroying databases and revoking privileges from other users... It seems like this affords lots of ways to shoot oneself in the foot...
Essentially, any time you console create a user, it creates a weak single point of potentially total failure. So it seems that as a general principle, console users should never be created for any cluster with anything remotely valuable in it, and this is just kind of a dangerous feature for anything but hobby/learning projects.
I should think that for any cluster with anything important in it, all password users should be rejected (from the general principle that password auth is weak) unless specifically for ad hoc admin stuff (where access should be hardened by limiting access to the allow-listed IPs of the application servers and a jumpbox that itself requires two factor auth or something to access).
So, off the top it seems that cloud users in particular, since they can't use stronger DB-level authentication need to rely on the specifically host-based functionality of HBA, and that network and application security become terribly important. In a way, that seems an unfortunate consequence, since the point of Cloud (from a security stance) is that it is precisely supposed to externalize security considerations, rather than create new responsibility and ways to mess up...
Am I understanding things correctly here?